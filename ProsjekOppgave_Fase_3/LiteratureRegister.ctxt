#BlueJ class context
comment0.params=
comment0.target=LiteratureRegister()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ LiteratureRegister\r\n
comment1.params=newLiterature
comment1.target=void\ addLiterature(Literature)
comment1.text=\r\n\ \r\n
comment10.params=indexToRemove
comment10.target=void\ removeLiterature(int)
comment10.text=\r\n\ Removes\ literature\ from\ literatureList\r\n
comment11.params=input
comment11.target=void\ removeLiterature(java.lang.String)
comment12.params=
comment12.target=void\ clear()
comment12.text=\r\n\ Clears\ the\ Terminal\ Window.\r\n
comment2.params=input
comment2.target=Literature\ getLiteratureTitle(java.lang.String)
comment3.params=input
comment3.target=java.util.ArrayList\ searchingForLiterature(java.lang.String)
comment3.text=\r\n\ Return\ a\ string\ with\ the\ information\ about\ the\ literature\r\n
comment4.params=input
comment4.target=java.util.ArrayList\ findLiteratureList(java.lang.String)
comment4.text=\r\n\ A\ search\ function\ for\ the\ literature.\ Searches\ for\ the\ title\ of\ the\ literature,\ checks\r\n\ if\ the\ literature\ is\ in\ the\ litReg.\r\n\r\n\ @param\ \ String\ title\r\n
comment5.params=input
comment5.target=java.lang.String\ findLiteratureString(java.lang.String)
comment5.text=\r\n\ Adding\ a\ literature\ to\ the\ litReg\ ArrayList.\ If\ the\ literature\ already\ exist\ in\ the\r\n\ register\ a\ message\ about\ that\ is\ printed\ to\ the\ Terminal\ window.\r\n\r\n\ @param\ \ Literature\ id\r\n\ @return\ \ id\r\n
comment6.params=
comment6.target=java.util.ArrayList\ getInfoListAllLiterature()
comment6.text=\r\n\ Returns\ a\ list\ with\ all\ information\ about\ every\ literature\ in\ the\ register.\r\n\ @return\ returns\ an\ ArrayList<Strin>,\ every\ index\ holds\ info\ about\ one\ literature-\r\n\ example\:\ Title\:\ Publisher\:\ Release\ year\:\ .\r\n
comment7.params=
comment7.target=java.util.ArrayList\ getInfoListForEachLiterature()
comment7.text=\r\n\ Returns\ an\ ArrayList\ with\ info\ on\ each\ literature\ in\ the\ list\ given\ as\ a\ parameter\r\n\ \r\n\ @return\ returns\ an\ ArrayList<String>\ with\ info\ about\ each\ literature\ in\ the\ input\ parameter\ list.\r\n\ An\ index\ holds\ the\ info\ for\ one\ literature.\ Example\:\ Title\:\ by\:\ Release\ year\:\ .\r\n
comment8.params=inputLiterature
comment8.target=java.lang.String\ getLiteratureInfo(Literature)
comment8.text=\r\n\ Prints\ information\ about\ one\ given\ literature,\ given\ by\ the\ parameter\ inputLiterature.\r\n\r\n\ @param\ \ Literature\ inputLiterature\ List\ \r\n\ @return\ literature\r\n
comment9.params=
comment9.target=java.lang.String\ getLiteratureInfoString()
comment9.text=\r\n\ Returns\ a\ infoString\ that\ gives\ all\ the\ information\ by\ all\ the\ literatures\r\n\r\n\ @return\ infoString\r\n
numComments=13
